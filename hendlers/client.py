from aiogram import types, Dispatcher
from bot import bot
from keyboards import button

CHANNEL_ID = "@test_channel123456765"


def check_admin(chat_member):
    if chat_member['status'] == 'administrator' or chat_member['status'] == 'creator':
        return True
    else:
        return False

def check_message(message):


# @dp.message_handler(commands=['start'])
async def start_message(message: types.Message):
    if check_admin(await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=message.from_user.id)):
        await bot.send_message(message.from_user.id, "–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ú–û–î–ï–†–ê–¢–û–†–ê", reply_markup=button.btnAdm)
    else:
        await bot.send_message(message.from_user.id, '–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ {0.first_name}\n'
                                                     '–ß–ï–†–ï–ó –î–ê–ù–ù–û–ì–û –ë–û–¢–ê –í–´ –ú–û–ñ–ï–¢–ï –ü–û–°–ú–û–¢–†–ï–¢–¨ –ú–ï–ù–Æ, –†–ï–ñ–ò–ú –†–ê–ë–û–¢–´ –ê –¢–ê–ö –ñ–ï –ó–ê–ë–†–û–ù–ò–†–û–í–ê–¢–¨ –°–¢–û–õ–ò–ö'.format(
            message.from_user),
                               reply_markup=button.mainMenu)


async def check_bron(message: types.Message):
    if message.text == "‚ùå –û—Å—Ç–æ–Ω–æ–≤–∏—Ç—å –±—Ä–æ–Ω–∏":
        await message.reply("–ë—Ä–æ–Ω–∏ –ø–æ–∫–∞ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è", reply_markup=button.btnAdm)
    else:
        await message.reply("–ü–æ—Ä–∞ —Ä–∞–±–æ—Ç–∞—Ç—å!", reply_markup=button.btnAdm)


# @dp.message_handler(commands=['üïó –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã'])
async def time_of_work(message: types.Message):
    await bot.send_message(message.from_user.id, '–£–ª–∏—Ü–∞ –ê–¥–µ–ª—è –ö—É—Ç—É—è 68/2\n'
                                                 '–ü–Ω-–ß—Ç 9:00-23:00\n'
                                                 '–ü—Ç-–°–± 9:00-00:00\n'
                                                 '–í—Å 10:00-23:00')


# @dp.message_handler(commands=['üìñ –ú–µ–Ω—é'])
async def menu(message: types.Message):
    await bot.send_message(message.from_user.id, '–í–´–ë–ò–†–ê–ô–¢–ï –° –£–ú–û–ú', reply_markup=button.inlineMenu)


async def back(message: types.Message):
    await message.reply("–ü–ï–†–ï–•–û–î –ù–ê –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ", reply_markup=button.mainMenu)


"""–ë–ª–æ–∫ –∫–æ–º–∞–Ω–¥ –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –ú–ï–ù–Æ"""


async def gor_zak(message: types.Message):
    await bot.send_message(message.from_user.id, "https://telegra.ph/Menyu-03-26-3", reply_markup=button.inlineMenu)


"""–ë–ª–æ–∫ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""



def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(start_message, commands=['start', 'help'])
    dp.register_message_handler(time_of_work, text=['üïó –†–ï–ñ–ò–ú –†–ê–ë–û–¢–´'])
    dp.register_message_handler(menu, text=['üìñ –ú–ï–ù–Æ'])
    dp.register_message_handler(back, text="üîô –ù–ê–ó–ê–î")
    """–ë–ª–æ–∫ –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é"""
    dp.register_message_handler(gor_zak, text="üç± –•–û–õ–û–î–ù–´–ï –ò –ì–û–†–Ø–ß–ò–ï –ó–ê–ö–£–°–ö–ò")
    """–ë–ª–æ–∫ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""
    dp.register_message_handler(check_bron, text="‚ùå –û—Å—Ç–æ–Ω–æ–≤–∏—Ç—å –±—Ä–æ–Ω–∏")
